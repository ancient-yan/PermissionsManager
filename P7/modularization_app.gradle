apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

androidExtensions {
    experimental = true
}

android {

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
            storeFile rootProject.file(releaseKeyFileName)
            storePassword releaseKeyPassword
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.gwchina.lssw.module.${project.name.toLowerCase()}"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resConfigs "zh", "en"//只需要中文和英文资源

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    testOptions { unitTests.returnDefaultValues = true }

    dexOptions {
        //jumboMode = true 忽略方法数限制（这样做的缺点是apk无法在低版本的设备上安装，会出现错误：INSTALL_FAILED_DEXOPT），如果APP只兼容到19则不会有影响
        javaMaxHeapSize "4g"
    }

    flavorDimensions "default-flavorDimensions"

    productFlavors {
        // 开发环境
        flavors_dev {
            applicationIdSuffix '.dev'
            //极光推送配置
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.gwchina.lssw.parent.dev",
                    JPUSH_APPKEY : "8544ffd7836c03c686dd1545",
                    JPUSH_CHANNEL: "developer-default",
                    AMAP_KEY     : "-"
            ]
            dimension "default-flavorDimensions"
        }

        //测试环境
        flavors_test {
            applicationIdSuffix '.debug'
            //极光推送配置
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.gwchina.lssw.parent.debug",
                    JPUSH_APPKEY : "6c9590977a5af2081c372821",
                    JPUSH_CHANNEL: "developer-default",
                    AMAP_KEY     : "-"
            ]
            dimension "default-flavorDimensions"
        }

        // 线上环境
        flavors_release {
            //极光推送配置
            manifestPlaceholders = [
                    JPUSH_PKGNAME: "com.gwchina.lssw.parent",
                    JPUSH_APPKEY : "9d07555566e72daeece0a7b4",
                    JPUSH_CHANNEL: "developer-default",
                    AMAP_KEY     : "-"
            ]
            dimension "default-flavorDimensions"
        }
    }

    buildTypes {
        //测试
        debug {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            manifestPlaceholders = [screenOrientation: "unspecified"]
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
        }

        //正式发布
        release {
            zipAlignEnabled true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'src/app/AndroidManifest.xml'
            java.srcDirs += 'src/app/java/'
            res.srcDirs += 'src/app/res'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    //基础类库
    implementation project(':module_base')
    //测试
    testImplementation testLibraries.junit
    /*Dagger2*/
    kapt thirdLibraries.dagger2Apt
    kapt thirdLibraries.dagger2AndroidApt
    /*ARouter*/
    kapt thirdLibraries.arouterAnnotation
    /* all jar*/
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
