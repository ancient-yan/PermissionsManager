buildscript {

    apply from: 'config/repository.gradle'
    apply from: 'libraries.gradle'

    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/umsdk/release' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://jitpack.io' }
        maven { url uri('repo') }
        google()
    }
    dependencies {
        //android
        classpath 'com.android.tools.build:gradle:3.5.0'
        //kotlin
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41'
        //multi channel
        classpath 'com.leon.channel:plugin:2.0.3'
        //tinker
        classpath "com.tencent.bugly:tinker-support:1.2.0"
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/umsdk/release' }
        maven { url 'https://dl.google.com/dl/android/maven2/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://jitpack.io' }
        google()
        flatDir { dirs rootProject.projectDir.getAbsolutePath() + '/repo/aar' }
        flatDir { dirs 'libs' }
        configurations.all {
            resolutionStrategy.force(
                    "android.arch.core:runtime:1.1.1",
                    "android.arch.lifecycle:livedata:1.1.1",
                    "android.arch.lifecycle:viewmodel:1.1.1",
                    "android.arch.lifecycle:extensions:1.1.1",
                    "android.arch.lifecycle:livedata-core:1.1.1",
                    "android.arch.lifecycle:runtime:1.1.1"
            )
        }
    }
}

ext {
    isMultiApp = isModularization.toBoolean()

    minSdkVersion = androidMinSdkVersion.toInteger()
    targetSdkVersion = androidTargetSdkVersion.toInteger()
    compileSdkVersion = androidCompileSdkVersion.toInteger()
    buildToolsVersion = androidBuildToolsVersion

    versionCode = androidVersionCode.toInteger()
    versionName = androidVersionName
}

task clean(type: Delete) {
    delete rootProject.buildDir
}