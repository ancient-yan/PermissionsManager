/*
功能：自动打包并上传到蒲公英
自定义：如果需要配置密码等，参考 https://www.pgyer.com/doc/view/api#uploadApp 添加修改参数即可

使用方式：
    命令行：gradlew :app:uploadRelease
    命令行：gradlew :app:uploadDebug
 */

// 自动打release 包并上传到蒲公英
task uploadRelease {
    doLast {
        println("uploadDebug sart =======================================================================")
        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.getOutputFile().getAbsolutePath().contains("release")) {
                    doUpload(new File(output.getOutputFile().getParentFile(), "${project.name}-${variant.versionName}.apk"))
                }
            }
        }
    }
}

// 自动打 debug  包并上传到蒲公英
task uploadDebug {
    doLast {
        println("uploadDebug sart =======================================================================")
        android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (!output.getOutputFile().getAbsolutePath().contains("release")) {
                    doUpload(new File(output.getOutputFile().getParentFile(), "${project.name}-${variant.versionName}.apk"))
                }
            }
        }
    }
}

project.afterEvaluate {
    tasks.getByName("uploadDebug").dependsOn(tasks.getByName("assembleFlavors_productDebug"))
    tasks.getByName("uploadRelease").dependsOn(tasks.getByName("assembleFlavors_productRelease"))
}

static void doUpload(File file) {
    if (!file.exists()) {
        println "upload file = $file, but it is not exists"
        return
    }
    println "upload file = $file ......"

    def fileMap = new HashMap<String, File>()
    fileMap.put("file", file)

    def form = new HashMap<String, String>()
    form.put("uKey", "95b03b060274ded718c7adcc7f2c7726")
    form.put("_api_key", "1462116b8b21d89b61626946cefd11d3")

    form.put("buildInstallType",2)
    form.put("buildPassword","123")

    FileUploadEx.uploadForm(form, fileMap)

    println("upload $file success")
    println("")
    println("")
}

class FileUploadEx {

    static final String BOUNDARY = "----WebKitFormBoundarynVJqhWCwnVwIPu8C"

    static void uploadForm(Map<String, String> params, Map<String, File> fileMap) throws Exception {

        OutputStream outputStream = null
        BufferedReader bufferedReader = null

        try {
//            URL url = new URL("https://qiniu-storage.pgyer.com/apiv1/app/upload")
            URL url = new URL("https://www.pgyer.com/apiv2/app/upload")

            HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection()
            urlConnection.setRequestMethod("POST")
            urlConnection.setDoOutput(true)
            urlConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + BOUNDARY)
            outputStream = urlConnection.getOutputStream()

            //普通表单
            StringBuilder sb = new StringBuilder()
            for (Map.Entry<String, String> entry : params.entrySet()) {
                //空行
                sb.append("--" + BOUNDARY + "\r\n")
                        .append("Content-Disposition: form-data; name=\"")
                        .append(entry.getKey())
                        .append("\"")
                        .append("\r\n")
                        .append("\r\n")
                        .append(entry.getValue())
                        .append("\r\n")
            }

            //写key 和 value
            outputStream.write(sb.toString().getBytes("UTF-8"))

            //写文件
            for (Map.Entry<String, File> entry : fileMap.entrySet()) {
                sb = new StringBuilder()
                sb.append("--" + BOUNDARY + "\r\n")
                sb.append("Content-Disposition: form-data; name=\"")
                        .append(entry.getKey()).append("\"; filename=\"")
                        .append(entry.getValue().getName()).
                        append("\"")
                        .append("\r\n")

                sb.append("Content-Type: application/octet-stream" + "\r\n")

                // 如果服务器端有文件类型的校验，必须明确指定ContentType
                sb.append("\r\n")
                outputStream.write(sb.toString().getBytes("UTF-8"))
                outputStream.write(entry.getValue().bytes)//写文件
                outputStream.write("\r\n".getBytes())//需要一个空行
            }

            //写结尾信息
            byte[] endInfo = ("--" + BOUNDARY + "--\r\n").getBytes("UTF-8")
            outputStream.write(endInfo)
            outputStream.flush()

            //判断是否成功
            if (urlConnection.getResponseCode() != 200) {
                throw new RuntimeException("上传${fileMap} 失败")
            }

            //读取返回信息
            println("upload result：")
            bufferedReader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()))
            bufferedReader.eachLine {
                println it
            }

        } finally {
            if (outputStream != null) {
                outputStream.close()
            }
            if (bufferedReader != null) {
                bufferedReader.close()
            }
        }

    }

}